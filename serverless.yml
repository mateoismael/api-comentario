org: mateoismael
service: api-comentario

provider:
  name: aws
  runtime: python3.12
  stage: ${opt:stage, 'dev'}               # Valor por defecto si omites --stage
  memorySize: 1024
  timeout: 30
  iam:
    role: arn:aws:iam::111097882274:role/LabRole  # tu rol preexistente
  environment:
    TABLE_NAME: ${self:provider.stage}-t_comentarios  # antes usabas ${sls:stage}
    BUCKET_NAME: ${self:service}-ingestion-${self:provider.stage}

functions:
  crear:
    handler: comentario.lambda_handler
    events:
      - http:
          path: comentario
          method: post

resources:
  Resources:
    # Tu tabla DynamoDB original
    ComentariosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: uuid
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: uuid
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    # Nuevo bucket S3 de Ingesta (push) por stage
    IngestionBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-ingestion-${self:provider.stage}

    # Inline policy para que LabRole pueda hacer put_object
    LabRoleS3PutPolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: AllowS3PutIngestion
        Roles:
          - LabRole
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource:
                - arn:aws:s3:::${self:service}-ingestion-${self:provider.stage}/*
